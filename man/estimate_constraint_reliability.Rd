% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/reliability.R
\name{estimate_constraint_reliability}
\alias{estimate_constraint_reliability}
\title{Estimate constraint reliability for calibrated designs}
\usage{
estimate_constraint_reliability(
  sim_fun,
  bounds,
  objective,
  constraints,
  strategies = c("bo", "grid", "random", "heuristic"),
  calibration_seeds = 1:20,
  validation_reps = 50000,
  bo_args = list(),
  grid_args = list(),
  random_args = list(),
  heuristic_args = list(),
  simulators_per_eval = list(),
  integer_params = NULL,
  progress = TRUE,
  ...
)
}
\arguments{
\item{sim_fun}{simulator callback passed to [bo_calibrate()].}

\item{bounds}{parameter bounds.}

\item{objective}{objective metric name.}

\item{constraints}{constraint specification (see [bo_calibrate()]).}

\item{strategies}{character vector indicating which strategies to run (subset
of `c("bo", "grid", "random", "heuristic")`).}

\item{calibration_seeds}{integer vector of seeds used for each repeated
calibration.}

\item{validation_reps}{number of simulator replications used when validating
a calibrated design (passed to `sim_fun` via the `n_rep` argument).}

\item{bo_args}{list of arguments forwarded to [bo_calibrate()] (e.g.,
`n_init`, `q`, `budget`, `seeds`).}

\item{grid_args}{list controlling grid search (`resolution`, `seeds`).}

\item{random_args}{list controlling random search (`n_samples`, `seeds`).}

\item{heuristic_args}{named list describing heuristic templates (`seeds`).}

\item{simulators_per_eval}{optional named list providing fidelity replication
counts per strategy (e.g., `list(bo = c(low = 200, med = 1000, high = 10000))`).}

\item{integer_params}{parameters constrained to integers.}

\item{progress}{logical; if `TRUE`, strategy-level progress messages are
emitted.}

\item{...}{additional arguments forwarded to `sim_fun`.}
}
\value{
An object of class `evolveBO_reliability` with components `summary`
  (strategy-level feasibility rates) and `runs` (per-run records).
}
\description{
Runs the requested calibration strategies across multiple seeds and
re-evaluates the resulting designs with a large Monte Carlo budget to
quantify constraint satisfaction probabilities.
}
